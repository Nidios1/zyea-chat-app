name: Build Zyea+ iOS App

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - adhoc
          - appstore
  # Auto build on push (commented out - run manually instead)
  # push:
  #   branches:
  #     - main
  #     - master
  #   paths:
  #     - 'zyea-plus-app/**'
  #     - '.github/workflows/build-zyea-plus-ios.yml'

jobs:
  build-ios:
    name: Build Zyea+ iOS
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: zyea-plus-app/package-lock.json

      - name: Install dependencies
        working-directory: ./zyea-plus-app
        run: npm ci

      - name: Build React app
        working-directory: ./zyea-plus-app
        run: |
          export DISABLE_ESLINT_PLUGIN=true
          npm run build

      - name: Setup Capacitor iOS
        working-directory: ./zyea-plus-app
        run: |
          npx cap sync ios

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Install iOS dependencies
        working-directory: ./zyea-plus-app/ios/App
        run: pod install

      - name: Install the Apple certificate and provisioning profile
        if: ${{ secrets.BUILD_CERTIFICATE_BASE64 != '' }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build iOS app (Development)
        if: github.event.inputs.build_type == 'development' || github.event.inputs.build_type == ''
        working-directory: ./zyea-plus-app/ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Debug \
            -destination generic/platform=iOS \
            -archivePath $PWD/build/App.xcarchive \
            archive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID || 'YOUR_TEAM_ID' }}"

      - name: Build iOS app (Ad Hoc)
        if: github.event.inputs.build_type == 'adhoc'
        working-directory: ./zyea-plus-app/ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath $PWD/build/App.xcarchive \
            archive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}"

      - name: Build iOS app (App Store)
        if: github.event.inputs.build_type == 'appstore'
        working-directory: ./zyea-plus-app/ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath $PWD/build/App.xcarchive \
            archive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}"

      - name: Export IPA (Development)
        if: github.event.inputs.build_type == 'development' || github.event.inputs.build_type == ''
        working-directory: ./zyea-plus-app/ios/App
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID || 'YOUR_TEAM_ID' }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ExportOptions.plist

      - name: Export IPA (Ad Hoc)
        if: github.event.inputs.build_type == 'adhoc'
        working-directory: ./zyea-plus-app/ios/App
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>ad-hoc</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ExportOptions.plist

      - name: Export IPA (App Store)
        if: github.event.inputs.build_type == 'appstore'
        working-directory: ./zyea-plus-app/ios/App
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ZyeaPlus-iOS-${{ github.event.inputs.build_type || 'development' }}-${{ github.run_number }}
          path: zyea-plus-app/ios/App/build/*.ipa
          retention-days: 30

      - name: Upload dSYM for debugging
        uses: actions/upload-artifact@v4
        with:
          name: ZyeaPlus-iOS-dSYM-${{ github.run_number }}
          path: zyea-plus-app/ios/App/build/*.dSYM.zip
          retention-days: 30
          if-no-files-found: ignore

      - name: Create Release
        if: github.event.inputs.build_type == 'appstore' || github.event.inputs.build_type == 'adhoc'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Zyea+ iOS v1.0.${{ github.run_number }}
          body: |
            ## Zyea+ iOS Build
            
            **Build Type**: ${{ github.event.inputs.build_type }}
            **Build Number**: ${{ github.run_number }}
            **Commit**: ${{ github.sha }}
            
            ### Installation
            - Download the IPA file
            - Install using your preferred method (TestFlight, direct install, etc.)
            
            ### Changes
            See commit history for detailed changes.
          files: |
            zyea-plus-app/ios/App/build/*.ipa
          draft: false
          prerelease: ${{ github.event.inputs.build_type != 'appstore' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up keychain and provisioning profile
        if: always()
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision || true

      - name: Build Summary
        if: success()
        run: |
          echo "âœ… Build completed successfully!"
          echo "ðŸ“¦ IPA file is available in the artifacts"
          echo "ðŸŽ¯ Build type: ${{ github.event.inputs.build_type || 'development' }}"
          echo "ðŸ”¢ Build number: ${{ github.run_number }}"

