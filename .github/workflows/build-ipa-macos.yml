name: Build IPA (macOS Direct)

on:
  push:
    branches:
      - main
      - master
      - develop
    paths:
      - 'mobile-expo/src/**'
      - 'mobile-expo/App.tsx'
      - 'mobile-expo/app.json'
      - 'mobile-expo/package.json'
      - '.github/workflows/build-ipa-macos.yml'
  workflow_dispatch:

jobs:
  build-ipa:
    name: Build iOS IPA (macOS)
    runs-on: macos-latest
    
    defaults:
      run:
        working-directory: ./mobile-expo
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: mobile-expo/package-lock.json

      - name: Install dependencies
        working-directory: ./mobile-expo
        run: npm ci

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest

      - name: Prebuild iOS project
        working-directory: ./mobile-expo
        run: |
          npx expo prebuild --platform ios --clean

      - name: List available schemes
        working-directory: ./mobile-expo/ios
        id: list_schemes
        run: |
          WORKSPACE=$(find . -name "*.xcworkspace" | head -1)
          echo "Found workspace: $WORKSPACE"
          echo "Available schemes:"
          xcodebuild -list -workspace "$WORKSPACE" || xcodebuild -list -project "$(find . -name "*.xcodeproj" | head -1)"
          
          # Try to find the scheme name automatically
          SCHEME=$(xcodebuild -list -workspace "$WORKSPACE" 2>/dev/null | grep -A 100 "Schemes:" | grep -v "Schemes:" | head -1 | xargs || echo "App")
          echo "Using scheme: $SCHEME"
          echo "scheme_name=$SCHEME" >> $GITHUB_OUTPUT
          echo "workspace_path=$WORKSPACE" >> $GITHUB_OUTPUT

      - name: Create exportOptions.plist
        working-directory: ./mobile-expo/ios
        run: |
          cat > exportOptions.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>teamID</key>
            <string></string>
            <key>provisioningProfiles</key>
            <dict/>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <false/>
            <key>compileBitcode</key>
            <false/>
          </dict>
          </plist>
          EOF
          
          echo "Created exportOptions.plist:"
          cat exportOptions.plist

      - name: Build IPA with xcodebuild (unsigned)
        working-directory: ./mobile-expo/ios
        run: |
          WORKSPACE="${{ steps.list_schemes.outputs.workspace_path }}"
          SCHEME="${{ steps.list_schemes.outputs.scheme_name }}"
          
          echo "Building with workspace: $WORKSPACE"
          echo "Building with scheme: $SCHEME"
          
          mkdir -p build
          
          # Build archive (unsigned)
          echo "Step 1: Building archive..."
          xcodebuild clean archive \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Release \
            -archivePath build/App.xcarchive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            -allowProvisioningUpdates
          
          echo "Archive created. Checking archive..."
          ls -la build/App.xcarchive/ || echo "Archive not found"
          
          # Export IPA (unsigned)
          echo "Step 2: Exporting IPA..."
          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
          
          echo "Export completed. Searching for IPA files..."
          echo "Contents of build directory:"
          ls -la build/ || echo "Build directory empty"
          
          echo "Searching recursively for IPA files:"
          find . -name "*.ipa" -type f 2>/dev/null || echo "No IPA files found"
          
          # Copy IPA to a known location
          IPA_FILE=$(find . -name "*.ipa" -type f | head -1)
          if [ -n "$IPA_FILE" ]; then
            echo "Found IPA: $IPA_FILE"
            mkdir -p build-artifacts
            cp "$IPA_FILE" build-artifacts/app.ipa
            echo "IPA copied to: build-artifacts/app.ipa"
          else
            echo "ERROR: No IPA file found!"
            exit 1
          fi

      - name: Find and upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-${{ github.run_number }}-${{ github.sha }}
          path: mobile-expo/ios/build-artifacts/*.ipa
          retention-days: 30
          if-no-files-found: error

