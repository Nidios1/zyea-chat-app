name: Build iOS IPA

on:
  push:
    branches: [ main, master ]
    paths:
      - 'client/**'
      - '.github/workflows/build-ios.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Cho ph√©p trigger th·ªß c√¥ng

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd client
          npm install
      
      - name: Build React app
        run: |
          cd client
          npm run build
        env:
          REACT_APP_API_URL: https://your-api-url.com/api
          REACT_APP_SOCKET_URL: https://your-api-url.com
      
      - name: Setup Capacitor
        run: |
          cd client
          npx cap sync ios || npx cap add ios
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Install CocoaPods dependencies
        run: |
          cd client/ios/App
          pod install
      
      # Build IPA v·ªõi code signing (n·∫øu c√≥ certificates)
      - name: Import Code-Signing Certificates
        if: secrets.IOS_CERTIFICATE_BASE64 != ''
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      
      - name: Import Provisioning Profile
        if: secrets.IOS_PROVISIONING_PROFILE_BASE64 != ''
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
      
      - name: Build IPA
        if: secrets.IOS_CERTIFICATE_BASE64 != ''
        run: |
          cd client/ios/App
          
          # Build archive
          xcodebuild clean archive \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath $PWD/build/App.xcarchive \
            CODE_SIGN_IDENTITY="${{ secrets.IOS_CODE_SIGN_IDENTITY }}" \
            PROVISIONING_PROFILE_SPECIFIER="${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}" \
            CODE_SIGN_STYLE=Manual
          
          # Export IPA
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportOptionsPlist ../../ios-export-options.plist \
            -exportPath $PWD/build \
            -allowProvisioningUpdates
      
      # Upload IPA artifact
      - name: Upload IPA
        if: secrets.IOS_CERTIFICATE_BASE64 != ''
        uses: actions/upload-artifact@v4
        with:
          name: Zyea-Plus-${{ github.run_number }}.ipa
          path: client/ios/App/build/*.ipa
          retention-days: 30
      
      # Test build (without signing) n·∫øu ch∆∞a c√≥ certificates
      - name: Test Build (No Signing)
        if: secrets.IOS_CERTIFICATE_BASE64 == ''
        run: |
          echo "‚ö†Ô∏è  iOS Certificates ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh"
          echo ""
          echo "‚ÑπÔ∏è  ƒê·ªÉ build IPA, th√™m c√°c secrets sau v√†o GitHub:"
          echo "   Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí New repository secret"
          echo ""
          echo "   üìù Secrets c·∫ßn thi·∫øt:"
          echo "   - IOS_CERTIFICATE_BASE64 (P12 certificate)"
          echo "   - IOS_CERTIFICATE_PASSWORD"
          echo "   - IOS_PROVISIONING_PROFILE_BASE64"
          echo "   - IOS_PROVISIONING_PROFILE_NAME"
          echo "   - IOS_CODE_SIGN_IDENTITY"
          echo ""
          echo "‚úÖ React app ƒë√£ build th√†nh c√¥ng!"
          echo "‚úÖ Capacitor sync ho√†n t·∫•t!"
          echo ""
          echo "üìñ Xem BUILD_IPA_GUIDE.md ƒë·ªÉ bi·∫øt c√°ch setup"
          echo "üîó https://github.com/${{ github.repository }}/blob/master/BUILD_IPA_GUIDE.md"
