name: Build iOS Apps

on:
  workflow_dispatch:
    inputs:
      app_to_build:
        description: 'Which app to build'
        required: true
        default: 'zyeaplus'
        type: choice
        options:
          - messenger
          - zyeaplus
          - both

jobs:
  build-messenger-ios:
    name: Build Messenger iOS
    runs-on: macos-latest
    if: github.event.inputs.app_to_build == 'messenger' || github.event.inputs.app_to_build == 'both'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Build React app
        working-directory: ./client
        run: |
          export DISABLE_ESLINT_PLUGIN=true
          npm run build

      - name: Setup Capacitor iOS
        working-directory: ./client
        run: |
          npx cap add ios || true
          npx cap sync ios

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install the Apple certificate and provisioning profile
        if: ${{ secrets.BUILD_CERTIFICATE_BASE64 != '' }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build iOS app (Development)
        working-directory: ./client/ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Debug \
            -destination generic/platform=iOS \
            -archivePath $PWD/build/App.xcarchive \
            archive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}"

      - name: Export IPA
        working-directory: ./client/ios/App
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: Messenger-iOS-IPA
          path: client/ios/App/build/*.ipa
          retention-days: 30

      - name: Clean up keychain and provisioning profile
        if: always()
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision || true

  build-zyeaplus-ios:
    name: Build Zyea+ iOS
    runs-on: macos-latest
    if: github.event.inputs.app_to_build == 'zyeaplus' || github.event.inputs.app_to_build == 'both'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: zyea-plus-app/package-lock.json

      - name: Install dependencies
        working-directory: ./zyea-plus-app
        run: npm ci

      - name: Build React app
        working-directory: ./zyea-plus-app
        run: |
          export DISABLE_ESLINT_PLUGIN=true
          npm run build

      - name: Setup Capacitor iOS
        working-directory: ./zyea-plus-app
        run: |
          npx cap add ios || true
          npx cap sync ios

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install the Apple certificate and provisioning profile
        if: ${{ secrets.BUILD_CERTIFICATE_BASE64 != '' }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build iOS app
        working-directory: ./zyea-plus-app/ios/App
        run: |
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Debug \
            -destination generic/platform=iOS \
            -archivePath $PWD/build/App.xcarchive \
            archive \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}"

      - name: Export IPA
        working-directory: ./zyea-plus-app/ios/App
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: ZyeaPlus-iOS-IPA
          path: zyea-plus-app/ios/App/build/*.ipa
          retention-days: 30

      - name: Clean up keychain and provisioning profile
        if: always()
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision || true

